{{/*@formatter:off*/}}
{{- /*gotype: ingress-controller/nginx.HttpTplData*/ -}}
# BuildTime: {{ now }}
log_format  main  {{ .LogFormat }};
access_log  {{ .AccessLog }}  main;

{{- define "location" }}
{{- /*gotype: ingress-controller/nginx.Location*/ -}}
# IngressRef: {{ .IngressRef }}
{{- if eq .PathType "Prefix" }}
  location {{ .Path.Path }} {
{{- else }}
  location = {{ .Path.Path }} {
{{- end }}

  {{- if .DisableAccessLog }}
    access_log off;
  {{- end }}

  {{- with .BasicAuth }}
    auth_basic "{{ .Realm }}";
    auth_basic_user_file {{ .UserFile }};
  {{- end }}

  {{- with .Return }}
    return {{ .StatusCode }} "{{ .Status }}";
  {{- end }}

  {{- with .ProxyPass }}
    proxy_set_header Host "$host";
    proxy_pass {{ .Upstream }};
  {{- end }}
  }
{{- end }}

server {
  server_name _;
  listen {{ printf "%d" .Http.Listen }};

  location = /_/healthz {
    access_log off;
    return 200 'ok';
  }

  location ~ /_/dump-config/(nginx|http) {
    default_type text/plain;
    alias "{{ .NgxPrefix }}/$1.conf";
  }

  {{ range $serverName, $server := .Http.Servers }}
  {{- if eq $serverName "_" }}
  {{- range $path, $location := $server.Locations }}
  {{ template "location" $location }}
  {{- end }}
  {{- end }}
  {{- end }}
}

{{ range $serverName, $server := .Http.Servers }}
{{- if ne $serverName "_" }}
server {
  server_name {{ $serverName }};
  listen {{ printf "%d" $.Listen }};

  {{- range $path, $location := $server.Locations }}
  {{ template "location" $location }}
  {{- end }}
}
{{- end }}
{{ end }}
